<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="mysql-system-api-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8081" />
    </http:request-config>
    <munit:test name="get:\accounts:mysql-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\accounts:mysql-system-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="get:\accounts:mysql-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="9443d27b-d7f3-47a9-8b88-9e17ceb444c9" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="156e6ce5-a1a3-4545-a1b2-47f9d3ae07f8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("scaffolder/response/get_200_accounts_application_json.json")]' mediaType="application/dw" />
					<munit-tools:attributes value="#[{'statusCode' : 200}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="7b48b3bb-2fce-4822-a829-2be5d0ccc019" >
				<munit:attributes value="#[{queryParams: {'LastModifiedDate' : '2021-11-16T22:25:27', 'LastModifiedById' : 'sfuser@localhost'} }]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="getModifiedAccountsFlow" doc:id="0cdb11f0-37f1-4c2f-82c8-5d1555d2f399" name="getModifiedAccountsFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::notNullValue()]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts:application\json:mysql-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [put:\accounts:application\json:mysql-system-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="put:\accounts:application\json:mysql-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock when" doc:id="f03168f1-e865-40d0-bb1d-de0ed12f1f5a" processor="db:bulk-update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="dbb5dc15-a812-4f9e-a16a-3c28366698e2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("scaffolder/response/put_200_accounts_application_json.json")]' mediaType="application/dw" />
					<munit-tools:attributes value="#[{'statusCode' : 200}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="5cdd6a21-260c-4269-86e7-9888c718841d" >
				<munit:payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_application_json.json')]" mediaType="application/dw" />
			</munit:set-event>
        </munit:behavior>
        <munit:execution>
			<flow-ref doc:name="putAccountsFlow" doc:id="8a580242-e486-4741-ad99-ec29808b090c" name="putAccountsFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::notNullValue()]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\accounts:application\json:mysql-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [put:\accounts:application\json:mysql-system-api-config-500-application\json]" expectedErrorType="DB:CONNECTIVITY">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="put:\accounts:application\json:mysql-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <munit-tools:mock-when doc:name="Mock when" doc:id="6f154857-954e-41c1-a248-b92874f0a486" processor="db:bulk-update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="dbb5dc15-a812-4f9e-a16a-3c28366698e2" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="DB:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="0432dc4a-4ab4-4464-b1b3-03224cd0c161" >
				<munit:payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_accounts_application_json.json')]" mediaType="application/dw" />
			</munit:set-event>
        </munit:behavior>
        <munit:execution>
			<flow-ref doc:name="putAccountsFlow" doc:id="fb31f159-5b46-4757-8ed1-1de4c71e2d17" name="putAccountsFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[payload.status]" is="#[MunitTools::equalTo('Failed')]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:mysql-system-api-config-201-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:mysql-system-api-config-201-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:mysql-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="80086a15-bb94-4241-a4de-fab503826a95" processor="db:bulk-insert">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="f611a7c7-4df1-4330-b2dc-91022af60271" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return>
					<munit-tools:payload value='#[MunitTools::getResourceAsString("scaffolder/response/post_201_accounts_application_json.json")]' mediaType="application/dw" />
					<munit-tools:attributes value="#[{'statusCode' : 201}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="c0f15d9e-1c1c-40d3-b819-bf6117b7d6f9" >
				<munit:payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" mediaType="application/dw" />
			</munit:set-event>
        </munit:behavior>
        <munit:execution>
			<flow-ref doc:name="postAccountsFlow" doc:id="c86a399a-5936-48d5-a2d3-b097bd57d4ae" name="postAccountsFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::notNullValue()]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\accounts:application\json:mysql-system-api-config-500-application\json-FlowTest" description="Verifying functionality of [post:\accounts:application\json:mysql-system-api-config-500-application\json]" expectedErrorType="DB:CONNECTIVITY">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="post:\accounts:application\json:mysql-system-api-config" />
        </munit:enable-flow-sources>
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock when" doc:id="a22bb1cd-ed21-48a9-837d-540fbe8fe697" processor="db:bulk-insert">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="f611a7c7-4df1-4330-b2dc-91022af60271" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("scaffolder/response/post_500_accounts_application_json.json")]' mediaType="application/dw" />
					<munit-tools:error typeId="DB:CONNECTIVITY" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="e8d05959-6e10-455a-b3ca-16d43f824800">
				<munit:payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_accounts_application_json.json')]" mediaType="application/dw" />
			</munit:set-event>
        </munit:behavior>
		<munit:execution>
			<flow-ref doc:name="postAccountsFlow" doc:id="0210a702-b064-426f-9285-2bff5f984a89" name="postAccountsFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[payload.status]" is='#[MunitTools::equalTo("Failed")]' message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\accounts\name:mysql-system-api-config-200-application\json-FlowTest" description="Verifying functionality of [get:\accounts\name:mysql-system-api-config-200-application\json]">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysql-system-api-main" />
            <munit:enable-flow-source value="get:\accounts\name:mysql-system-api-config" />
        </munit:enable-flow-sources>
        <munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a64ba6ea-1ab1-493a-aa29-85acbd1db00e" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="61e0c36c-8534-4993-86b0-a27b4179a59a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[MunitTools::getResourceAsString("scaffolder/response/get_200_accounts_name_application_json.json")]' mediaType="application/dw" />
					<munit-tools:attributes value="#[{'statusCode' : 200}]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Event" doc:id="a873db18-6b4a-4b3b-9783-c5998fdbb912" >
				<munit:attributes value="#[{queryParams: {'accountName' : 'Capgemini'} }]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<flow-ref doc:name="getAccountByNameFlow" doc:id="a7001515-7cfb-4b5e-8f3e-9129a5d10e06" name="getAccountByNameFlow"/>
        </munit:execution>
		<munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::notNullValue()]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
